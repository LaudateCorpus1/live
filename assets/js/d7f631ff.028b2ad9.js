(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5279],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return u}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var d=n.createContext({}),m=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=m(r),u=l,f=s["".concat(d,".").concat(u)]||s[u]||c[u]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function u(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var m=2;m<a;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1099:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return d},toc:function(){return m},default:function(){return c}});var n=r(2122),l=r(9756),a=(r(7294),r(3905)),o=["components"],i={id:"mobilemodelmodule.mobilemodel",title:"Interface: MobileModel",sidebar_label:"MobileModel",custom_edit_url:null},d={unversionedId:"api/core/interfaces/mobilemodelmodule.mobilemodel",id:"api/core/interfaces/mobilemodelmodule.mobilemodel",isDocsHomePage:!1,title:"Interface: MobileModel",description:"MobileModelModule.MobileModel",source:"@site/docs/api/core/interfaces/mobilemodelmodule.mobilemodel.md",sourceDirName:"api/core/interfaces",slug:"/api/core/interfaces/mobilemodelmodule.mobilemodel",permalink:"/live/docs/api/core/interfaces/mobilemodelmodule.mobilemodel",editUrl:null,version:"current",sidebar_label:"MobileModel",frontMatter:{id:"mobilemodelmodule.mobilemodel",title:"Interface: MobileModel",sidebar_label:"MobileModel",custom_edit_url:null},sidebar:"api",previous:{title:"Interface: Image",permalink:"/live/docs/api/core/interfaces/imagemodule.image"},next:{title:"Interface: ModelResult<T>",permalink:"/live/docs/api/core/interfaces/mobilemodelmodule.modelresult"}},m=[{value:"Methods",id:"methods",children:[{value:"execute",id:"execute",children:[]},{value:"preload",id:"preload",children:[]},{value:"unload",id:"unload",children:[]}]}],p={toc:m};function c(e){var t=e.components,r=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/live/docs/api/core/modules/mobilemodelmodule"},"MobileModelModule"),".MobileModel"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"execute"},"execute"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"execute"),"<T",">","(",(0,a.kt)("inlineCode",{parentName:"p"},"modelPath"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"params"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/live/docs/api/core/interfaces/mobilemodelmodule.modelresult"},"ModelResult"),"<T",">",">"),(0,a.kt)("p",null,"Run inference on a model."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const classificationModel = require('../models/mobilenet_v3_small.ptl');\n\n// or\n\nconst classificationModel = require('https://example.com/models/mobilenet_v3_small.ptl');\n\nconst image: Image = await ImageUtils.fromURL('https://image.url');\n\nconst { result: {maxIdx} } = await MobileModel.execute(\n  classificationModel,\n  {\n    image,\n  }\n);\n\nconst topClass = ImageClasses(scores);\n")),(0,a.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"T"))))),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"modelPath")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/live/docs/api/core/modules/models#modelpath"},"ModelPath")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The model path as require or uri (i.e., ",(0,a.kt)("inlineCode",{parentName:"td"},"require"),").")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"params")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"any")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The input parameters for the model.")))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/live/docs/api/core/interfaces/mobilemodelmodule.modelresult"},"ModelResult"),"<T",">",">"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/pytorch/live/blob/df82e4d/react-native-pytorch-core/src/MobileModelModule.ts#L149"},"MobileModelModule.ts:149")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"preload"},"preload"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"preload"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"modelPath"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<void",">"),(0,a.kt)("p",null,"Preload a model. If a model is not preloaded, it will be loaded during the\nfirst inference call. However, the first inference time will therefore\ntake significantly longer. This function allows to preload a model ahead\nof time before running the first inference."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"modelPath")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/live/docs/api/core/modules/models#modelpath"},"ModelPath")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The model path as require or uri (i.e., ",(0,a.kt)("inlineCode",{parentName:"td"},"require"),").")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<void",">"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/pytorch/live/blob/df82e4d/react-native-pytorch-core/src/MobileModelModule.ts#L115"},"MobileModelModule.ts:115")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"unload"},"unload"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"unload"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<void",">"),(0,a.kt)("p",null,"Unload all model. If any model were loaded previously, they will be discarded.\nThis function allows to load a new version of a model without restarting the\napp."),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<void",">"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/pytorch/live/blob/df82e4d/react-native-pytorch-core/src/MobileModelModule.ts#L122"},"MobileModelModule.ts:122")))}c.isMDXComponent=!0}}]);